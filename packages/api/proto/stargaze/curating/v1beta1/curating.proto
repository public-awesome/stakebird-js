syntax = "proto3";

package stargaze.curating.v1beta1;

option go_package = "github.com/public-awesome/stargaze/x/curating/types";

import "gogoproto/gogo.proto";
import "cosmos/base/v1beta1/coin.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/duration.proto";

message Post {
  uint32 vendor_id = 1 [
    (gogoproto.customname) = "VendorID",
    (gogoproto.moretags) = "yaml:\"vendor_id\"",
    (gogoproto.jsontag) = "vendor_id"
  ];
  string post_id = 2 [
    (gogoproto.customtype) = "PostID",
    (gogoproto.customname) = "PostID",
    (gogoproto.moretags) = "yaml:\"post_id\"",
    (gogoproto.jsontag) = "post_id",
    (gogoproto.nullable) = false
  ];
  string creator = 3 [ (gogoproto.moretags) = "yaml:\"creator\"" ];
  string reward_account = 4
      [ (gogoproto.moretags) = "yaml:\"reward_account\"" ];
  string body_hash = 5 [
    (gogoproto.customtype) = "BodyHash",
    (gogoproto.customname) = "BodyHash",
    (gogoproto.moretags) = "yaml:\"body_hash\"",
    (gogoproto.jsontag) = "body_hash",
    (gogoproto.nullable) = false
  ];
  string body = 6 [ (gogoproto.moretags) = "yaml:\"body\"" ];
  google.protobuf.Timestamp curating_end_time = 7 [
    (gogoproto.stdtime) = true,
    (gogoproto.nullable) = false,
    (gogoproto.moretags) = "yaml:\"curating_end_time\""
  ];
  uint64 total_votes = 8 [
    (gogoproto.customname) = "TotalVotes",
    (gogoproto.moretags) = "yaml:\"total_votes\"",
    (gogoproto.jsontag) = "total_votes"
  ];
  uint64 total_voters = 9 [
    (gogoproto.customname) = "TotalVoters",
    (gogoproto.moretags) = "yaml:\"total_voters\"",
    (gogoproto.jsontag) = "total_voters"
  ];
  cosmos.base.v1beta1.Coin total_amount = 10 [
    (gogoproto.nullable) = false,
    (gogoproto.customname) = "TotalAmount",
    (gogoproto.moretags) = "yaml:\"total_amount\"",
    (gogoproto.jsontag) = "total_amount"
  ];
  string chain_id = 11 [
    (gogoproto.customname) = "ChainID",
    (gogoproto.moretags) = "yaml:\"chain_id\"",
    (gogoproto.jsontag) = "chain_id",
    (gogoproto.nullable) = true
  ];
  string owner = 12 [ (gogoproto.moretags) = "yaml:\"owner\"" ];
  string contract_address = 13
      [ (gogoproto.moretags) = "yaml:\"contract_address\"" ];
  string metadata = 14 [ (gogoproto.moretags) = "yaml:\"metadata\"" ];
  bool locked = 15 [ (gogoproto.moretags) = "yaml:\"locked\"" ];
  string parent_id = 16 [
    (gogoproto.customname) = "ParentID",
    (gogoproto.customtype) = "PostID",
    (gogoproto.moretags) = "yaml:\"parent_id\"",
    (gogoproto.jsontag) = "parent_id",
    (gogoproto.nullable) = true
  ];
}

message Upvote {
  uint32 vendor_id = 1 [
    (gogoproto.customname) = "VendorID",
    (gogoproto.moretags) = "yaml:\"vendor_id\"",
    (gogoproto.jsontag) = "vendor_id"
  ];
  string post_id = 2 [
    (gogoproto.customtype) = "PostID",
    (gogoproto.customname) = "PostID",
    (gogoproto.moretags) = "yaml:\"post_id\"",
    (gogoproto.jsontag) = "post_id",
    (gogoproto.nullable) = false
  ];
  string curator = 3 [ (gogoproto.moretags) = "yaml:\"curator\"" ];
  string reward_account = 4
      [ (gogoproto.moretags) = "yaml:\"reward_account\"" ];
  cosmos.base.v1beta1.Coin vote_amount = 5 [ (gogoproto.nullable) = false ];
  google.protobuf.Timestamp curated_time = 6 [
    (gogoproto.stdtime) = true,
    (gogoproto.nullable) = false,
    (gogoproto.moretags) = "yaml:\"curated_time\""
  ];
}

// VPPair is struct that just has a vendor_id, post_id pair with no other data.
// It is intended to be used as a marshalable pointer. For example, a VPPair can
// be used to construct the key to getting an Upvote from state.
message VPPair {
  option (gogoproto.equal) = true;
  option (gogoproto.goproto_stringer) = true;

  uint32 vendor_id = 1 [
    (gogoproto.customname) = "VendorID",
    (gogoproto.moretags) = "yaml:\"vendor_id\"",
    (gogoproto.jsontag) = "vendor_id"
  ];
  string post_id = 2 [
    (gogoproto.customtype) = "PostID",
    (gogoproto.customname) = "PostID",
    (gogoproto.moretags) = "yaml:\"post_id\"",
    (gogoproto.jsontag) = "post_id",
    (gogoproto.nullable) = false
  ];
}

// VPPairs defines an array of VPPair objects.
message VPPairs { repeated VPPair pairs = 1 [ (gogoproto.nullable) = false ]; }

message Params {
  option (gogoproto.goproto_stringer) = false;

  google.protobuf.Duration curation_window = 1 [
    (gogoproto.nullable) = false,
    (gogoproto.stdduration) = true,
    (gogoproto.moretags) = "yaml:\"curation_window\""
  ];

  cosmos.base.v1beta1.Coin vote_amount = 2 [
    (gogoproto.nullable) = false,
    (gogoproto.moretags) = "yaml:\"vote_amount\"",
    (gogoproto.jsontag) = "vote_amount"
  ];

  uint32 max_num_votes = 3 [
    (gogoproto.moretags) = "yaml:\"max_num_votes\"",
    (gogoproto.jsontag) = "max_num_votes"
  ];

  uint32 max_vendors = 4 [
    (gogoproto.moretags) = "yaml:\"max_vendors\"",
    (gogoproto.jsontag) = "max_vendors"
  ];

  string reward_pool_allocation = 5 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false,
    (gogoproto.moretags) = "yaml:\"reward_pool_allocation\""
  ];

  uint32 max_post_body_length = 6 [
    (gogoproto.moretags) = "yaml:\"max_post_body_length\"",
    (gogoproto.jsontag) = "max_post_body_length"
  ];

  string reward_pool_curation_max_alloc = 8 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false,
    (gogoproto.jsontag) = "reward_pool_curation_max_alloc,omitempty",
    (gogoproto.moretags) = "yaml:\"reward_pool_curation_max_alloc\""
  ];

  cosmos.base.v1beta1.Coin initial_reward_pool = 9 [
    (gogoproto.nullable) = false,
    (gogoproto.moretags) = "yaml:\"initial_reward_pool\"",
    (gogoproto.jsontag) = "initial_reward_pool"
  ];

  string stake_denom = 10 [
    (gogoproto.moretags) = "yaml:\"stake_denom\"",
    (gogoproto.jsontag) = "stake_denom"
  ];
}
